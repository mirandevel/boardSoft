{"version":3,"sources":["firebase/firebaseConfig.js","firebase/AuthProvider.js","pages/HomePage.js","middlewares/AuthProvider.js","middlewares/UseAuth.js","routers/PrivateRouter.js","firebase/FirestoreProvider.js","figures/Box.js","figures/Arrow.js","pages/Modal.js","pages/BoardPage.js","pages/DashboardPage.js","routers/AppRouter.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Auth","getAuth","db","getFirestore","authProvider","login","provider","GoogleAuthProvider","signInWithPopup","then","result","console","log","catch","error","message","authState","setUser","setLogged","onAuthStateChanged","user","logout","signOut","HomePage","props","className","onClick","e","src","AuthContext","createContext","AuthProvider","children","useState","logged","useEffect","contextValue","isLogged","Provider","value","UseAuth","useContext","PrivateRouter","unsubscribe","Component","component","rest","auth","to","DB","initBoards","setBoards","email","q","query","collection","where","orderBy","onSnapshot","querySnapshot","items","forEach","doc","push","data","id","createBoards","name","addDoc","ownerId","uid","participantsEmail","timeStamp","Timestamp","fromMillis","Date","parse","toISOString","getBoard","setBoard","boardId","deleteBoard","documentId","deleteDoc","stop","addParticipant","updateDoc","arrayUnion","removeParticipant","arrayRemove","initBoxes","setBoxes","docId","createBox","box","updateBox","deleteBox","boxId","qStart","qEnd","finished","getDocs","snapshots","ref","docs","length","initArrows","setArrows","createArrow","updateArrow","deleteArrow","Box","location","useLocation","useXarrow","x","posX","y","posY","controlledPosition","setControlledPosition","dragHandlers","onStart","onStop","boxType","title","content","type","state","onDrag","position","nexArrowId","arrows","lastBox","Number","split","bounds","top","left","onMouseDown","button","selected","setShowOptions","showOptions","arrow","setAction","setSelected","action","newArrow","start","end","dotted","options","label","handleCLick","onDragStart","dataTransfer","setData","draggable","Arrow","passProps","cursor","dashness","path","strokeWidth","labels","middle","color","Modal","setModal","BoardPage","history","useHistory","undefined","replace","board","isOwner","setIsOwner","boxes","participants","delete","modalActions","setModalActions","Object","entries","includes","boxProps","arrowProps","nexBoxId","onDragOver","preventDefault","onDrop","getData","target","getBoundingClientRect","newBox","clientX","clientY","map","index","onChange","update","onSubmit","placeholder","toUpdate","updated","findIndex","element","splice","DashboardPage","boards","modal","pathname","AppRouter","exact","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e71f442f.chunk.js","sourcesContent":["import {initializeApp} from \"firebase/app\";\r\nimport {getAuth} from \"firebase/auth\";\r\nimport {getFirestore} from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDE6IX21DqpdY70cWRP1gxNPeg-E7IQF0g\",\r\n    authDomain: \"board-888dc.firebaseapp.com\",\r\n    projectId: \"board-888dc\",\r\n    storageBucket: \"board-888dc.appspot.com\",\r\n    messagingSenderId: \"1072906349267\",\r\n    appId: \"1:1072906349267:web:2e47467b611517325a0226\",\r\n    measurementId: \"G-L8M229PQ46\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const Auth = getAuth(app);\r\nexport const db = getFirestore(app);","import {Auth} from \"../firebase/firebaseConfig\";\r\nimport {onAuthStateChanged,signOut,GoogleAuthProvider, signInWithPopup} from \"firebase/auth\";\r\n\r\nconst authState=(setUser,setLogged)=>{\r\n    onAuthStateChanged(Auth, (user) => {\r\n        if (user) {\r\n            setUser(user);\r\n            setLogged(true);\r\n        } else {\r\n            setUser(null);\r\n            setLogged(false);\r\n        }\r\n    });\r\n};\r\n\r\nconst logout =(setUser)=>{\r\n    signOut(Auth).then(()=>{\r\n        setUser(null);\r\n    });\r\n}\r\n\r\nconst login=()=> {\r\n    const provider = new GoogleAuthProvider();\r\n    signInWithPopup(Auth, provider)\r\n        .then((result) => {\r\n            console.log(result)\r\n        }).catch((error) => {\r\n        console.log(error.message);\r\n    });\r\n\r\n}\r\n\r\nconst authProvider={\r\n    login,\r\n    authState,\r\n    logout\r\n}\r\nexport default authProvider;","import React from 'react';\r\nimport authProvider from \"../firebase/AuthProvider\";\r\n\r\nfunction HomePage(props) {\r\n\r\n\r\n    return (\r\n        <div className={'min-h-screen flex justify-center items-center bg-blue-50'}>\r\n            <div className={'w-2/5 bg-white h-96 shadow-xl p-5 pt-10'}>\r\n                <h1 className={'text-xl font-medium text-center'}>{'Accede para crear tus tableros'}</h1>\r\n                <div className={'flex justify-center items-center h-full'}>\r\n                <button className={'border rounded block my-5 inline-flex space-x-2 p-2 hover:shadow-lg'} onClick={e=>authProvider.login()}>\r\n                    <img src=\"https://img.icons8.com/color/24/000000/google-logo.png\"/>\r\n                    <span>{'Inicia con Google'}</span>\r\n                </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import {createContext, useEffect, useState} from 'react';\r\nimport {onAuthStateChanged} from \"firebase/auth\";\r\nimport {Auth} from \"../firebase/firebaseConfig\";\r\nimport authProvider from \"../firebase/AuthProvider\";\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthProvider = ({children}) => {\r\n    const [logged,setLogged]=useState(true);\r\n    const [user,setUser]=useState(null);\r\n\r\n    useEffect(() => {\r\n        authProvider.authState(setUser,setLogged)\r\n    },[]);\r\n\r\n    const contextValue = {\r\n        user,\r\n        setUser,\r\n        isLogged() {\r\n            return logged;\r\n        }\r\n    }\r\n    return <AuthContext.Provider value={contextValue}>\r\n        {children}\r\n    </AuthContext.Provider>\r\n\r\n};\r\n\r\nexport default AuthProvider;","import {React,useContext} from 'react';\r\nimport {AuthContext} from \"./AuthProvider\";\r\n\r\nfunction UseAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport default UseAuth;","import React from 'react';\r\nimport UseAuth from \"../middlewares/UseAuth\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nfunction PrivateRouter({component: Component, ...rest}) {\r\n    const auth = UseAuth();\r\n    return <Route {...rest}>\r\n        {auth.isLogged() ? (<Component/>\r\n        ) : (\r\n            <Redirect to={'/boardSoft'}/>\r\n        )}\r\n    </Route>;\r\n}\r\n\r\nexport default PrivateRouter;","import React, {useState} from 'react';\r\nimport {db} from \"../firebase/firebaseConfig\";\r\nimport {Timestamp,collection,deleteDoc, getDocs, doc, setDoc, addDoc, onSnapshot, query, where,orderBy,updateDoc, arrayUnion, arrayRemove } from \"firebase/firestore\";\r\n\r\nlet unsubscribe;\r\nconst initBoards=(setBoards,email)=>{\r\n    const q = query(collection(db, \"boards\"),where(\"participantsEmail\", \"array-contains\",email),orderBy(\"timeStamp\", \"desc\"));\r\n    unsubscribe=onSnapshot(q, (querySnapshot) => {\r\n        const items = [];\r\n        querySnapshot.forEach((doc) => {\r\n            items.push({...doc.data(),id:doc.id});\r\n        });\r\n        setBoards(items);\r\n        console.log(items);\r\n    });\r\n};\r\n\r\nconst stop=()=>{\r\n    return unsubscribe();\r\n}\r\n\r\nconst createBoards=(name,user)=>{\r\n    addDoc(collection(db, \"boards\"), {\r\n        name:name,\r\n        ownerId: user.uid,\r\n        participantsEmail: [user.email],\r\n        timeStamp: Timestamp.fromMillis(\r\n            Date.parse((new Date()).toISOString()))\r\n    });\r\n};\r\n\r\nconst getBoard=(setBoard,boardId)=>{\r\n    onSnapshot(doc(db, \"boards\", boardId), (doc) => {\r\n        setBoard(doc.data());\r\n    });\r\n}\r\n\r\nconst deleteBoard=(documentId)=>{\r\n    return deleteDoc(doc(db, \"boards\", documentId));\r\n}\r\n\r\nconst addParticipant=(email, boardId)=>{\r\n    updateDoc(doc(db, \"boards\", boardId), {\r\n        participantsEmail: arrayUnion(email)\r\n    });\r\n}\r\nconst removeParticipant=(email, boardId)=>{\r\n    updateDoc(doc(db, \"boards\", boardId), {\r\n        participantsEmail: arrayRemove(email)\r\n    });\r\n}\r\n\r\n\r\nconst initBoxes=(setBoxes,boardId)=>{\r\n    const q = query(collection(db, \"boards\",boardId,\"boxes\"),orderBy(\"id\", \"asc\"));\r\n    unsubscribe=onSnapshot(q, (querySnapshot) => {\r\n        const items = [];\r\n        querySnapshot.forEach((doc) => {\r\n            items.push({...doc.data(),docId:doc.id});\r\n        });\r\n        setBoxes(items);\r\n        console.log(items)\r\n    });\r\n};\r\nconst createBox=(boardId,box)=>{\r\n    addDoc(collection(db, \"boards\",boardId,\"boxes\"),box);\r\n};\r\nconst updateBox=(boardId,box)=>{\r\n    updateDoc(doc(db, \"boards\",boardId,\"boxes\",box.docId),box);\r\n\r\n    //eliminar flechas tambien\r\n}\r\nconst deleteBox=(boardId,docId,boxId)=>{\r\n    console.log(boxId);\r\n    const qStart = query(collection(db, \"boards\",boardId,\"arrows\"), where('start', '==', boxId));\r\n    const qEnd = query(collection(db, \"boards\",boardId,\"arrows\"), where('end', '==', boxId));\r\n    let finished=false;\r\n    getDocs(qStart).then((snapshots)=>{\r\n        snapshots.forEach((doc)=>{\r\n            deleteDoc(doc.ref);\r\n        });\r\n        if (finished)deleteDoc(doc(db, \"boards\",boardId,\"boxes\",docId));\r\n        else finished=!finished;\r\n    });\r\n    getDocs(qEnd).then((snapshots)=>{\r\n        console.log(snapshots.docs.length);\r\n        snapshots.forEach(doc=>{\r\n            deleteDoc(doc.ref);\r\n        });\r\n        if (finished)deleteDoc(doc(db, \"boards\",boardId,\"boxes\",docId));\r\n        else finished=!finished;\r\n    });\r\n}\r\n\r\n\r\nconst initArrows=(setArrows,boardId)=>{\r\n    const q = query(collection(db, \"boards\",boardId,\"arrows\"),orderBy(\"id\", \"asc\"));\r\n    unsubscribe=onSnapshot(q, (querySnapshot) => {\r\n        const items = [];\r\n        querySnapshot.forEach((doc) => {\r\n            items.push({...doc.data(),docId:doc.id});\r\n        });\r\n        setArrows(items);\r\n    });\r\n};\r\nconst createArrow=(boardId,box)=>{\r\n    addDoc(collection(db, \"boards\",boardId,\"arrows\"),box);\r\n};\r\nconst updateArrow=(boardId,box)=>{\r\n    updateDoc(doc(db, \"boards\",boardId,\"arrows\",box.docId),box);\r\n}\r\nconst deleteArrow=(boardId,boxId)=>{\r\n    deleteDoc(doc(db, \"boards\",boardId,\"arrows\",boxId));\r\n}\r\n\r\n\r\n\r\nconst DB ={\r\n    initBoards,\r\n    createBoards,\r\n    getBoard,\r\n    deleteBoard,\r\n    stop,\r\n    addParticipant,\r\n    removeParticipant,\r\n    initBoxes,\r\n    createBox,\r\n    updateBox,\r\n    deleteBox,\r\n    initArrows,\r\n    createArrow,\r\n    updateArrow,\r\n    deleteArrow\r\n}\r\n\r\n\r\nexport default DB;","import React, {useEffect, useState} from 'react';\r\nimport {useXarrow} from \"react-xarrows\";\r\nimport Draggable from \"react-draggable\";\r\nimport DB from \"../firebase/FirestoreProvider\";\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\n\r\nfunction Box(props) {\r\n    const location = useLocation();\r\n\r\n        const updateXarrow = useXarrow();\r\n        const [controlledPosition,setControlledPosition]=useState({\r\n                x: props.posX, y: props.posY\r\n        });\r\n\r\n        useEffect(()=>{\r\n            setControlledPosition({x: props.posX, y: props.posY});\r\n        },[props.posX,props.posY]);\r\n\r\n\r\n\r\n        const onControlledDrag = (e, position) => {\r\n            let {x, y} = position;\r\n            setControlledPosition({x, y});\r\n        };\r\n        const onStart = () => {\r\n        };\r\n\r\n        const onStop = () => {\r\n            const box={id:props.id,x:controlledPosition.x,y:controlledPosition.y,\r\n                boxType:props.boxType,title:props.title,content:props.content,type:'box',docId:props.docId};\r\n            DB.updateBox(location.state.boardId,box)\r\n        };\r\n\r\n        const dragHandlers = {onStart: onStart, onStop: onStop, onDrag:onControlledDrag};\r\n\r\n    function createBox() {\r\n        if(props.boxType==='person'){\r\n            return(\r\n                <div className={'rounded text-white flex flex-col justify-center items-center'}\r\n                     onDragStart={(e) => e.dataTransfer.setData('shape', 'person')}\r\n                     draggable={'true'}>\r\n                    <div className={'rounded-full w-10 h-10 bg-blue-700'}></div>\r\n                    <div className={'rounded w-full bg-blue-700 p-5 -mt-2 text-center'}>Persona</div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if(props.boxType==='system'){\r\n               return(\r\n                   <div className={props.action.name==='addArrow'?props.selected.id!==props.id?'systemSelected':'system':'system'}  id={props.id}>\r\n                       <p className={'title'}>{props.title}</p>\r\n                       <p >{props.content}</p>\r\n                   </div>\r\n               )\r\n        }\r\n        if(props.boxType==='container'){\r\n            return(\r\n                <div className={props.action.name==='addArrow'?props.selected.id!==props.id?'containerSelected':'container':'container'}  id={props.id}>\r\n                    <p className={'title'}>{props.title}</p>\r\n                    <p >{props.content}</p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if(props.boxType==='database'){\r\n            return(\r\n                <div className={props.action.name==='addArrow'?props.selected.id!==props.id?'databaseSelected':'database':'database'}  id={props.id}>\r\n                    <p className={'title'}>{props.title}</p>\r\n                    <p >{props.content}</p>\r\n                </div>\r\n            )\r\n        }\r\n        if(props.boxType==='component'){\r\n            return(\r\n                <div className={props.action.name==='addArrow'?props.selected.id!==props.id?'componentSelected':'component':'component'}  id={props.id}>\r\n                    <p className={'title'}>{props.title}</p>\r\n                    <p >{props.content}</p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    function nexArrowId() {\r\n        let id = 'arrow-0'\r\n        if (props.arrows.length === 0) return id;\r\n        else {\r\n            const lastBox = props.arrows[props.arrows.length - 1];\r\n            const lastNumber = Number((lastBox.id.split('-'))[1]) + 1;\r\n            return 'arrow-' + lastNumber;\r\n        }\r\n    }\r\n\r\n    function handleCLick(e) {\r\n        if(e.button===1) {\r\n            if(props.selected.id===props.id) {\r\n                props.setShowOptions({box:!props.showOptions.box,arrow:false});\r\n                props.setAction('');\r\n            }else{\r\n                props.setSelected({id:props.id,x:controlledPosition.x,y:controlledPosition.y,\r\n                    boxType:props.boxType,title:props.title,content:props.content,type:'box',docId:props.docId});\r\n\r\n                props.setShowOptions({box:true,arrow:false});\r\n            }\r\n        }\r\n        if(e.button===0){\r\n            switch (props.action.name) {\r\n                case 'addArrow':\r\n                    if(props.selected.id===props.id){\r\n                        props.setAction('');\r\n                        break;\r\n                    }\r\n                    const newArrow={id:nexArrowId(),start:props.selected.id, end:props.id,\r\n                        dotted:props.action.options.dotted, label:'label',docId:0}\r\n\r\n                    DB.createArrow(location.state.boardId,newArrow);\r\n\r\n                    props.setArrows([...props.arrows,newArrow]);\r\n                    props.setAction('');\r\n                    break;\r\n                default :\r\n                    props.setAction('');\r\n                    break;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n            <Draggable position={controlledPosition} {...dragHandlers}\r\n                         bounds={{top: 0, left: 0}}\r\n                        onMouseDown={(e)=>handleCLick(e)}>\r\n                {createBox()}\r\n            </Draggable>\r\n\r\n        );\r\n}\r\n\r\nexport default Box;","import React from 'react';\r\nimport Xarrow, {useXarrow, Xwrapper} from 'react-xarrows';\r\n\r\n\r\nfunction Arrow(props) {\r\n\r\n    function handleCLick() {\r\n        props.setAction('');\r\n        props.setShowOptions({box:false,arrow:!props.showOptions.arrow});\r\n        props.setSelected({id:props.id, start:props.start, end:props.end,\r\n            dotted:props.dotted, label: props.label,type:'arrow',docId:props.docId});\r\n    }\r\n\r\n    const passProps={\r\n        onClick: () => handleCLick(),\r\n        cursor: 'pointer'\r\n    }\r\n\r\n\r\n    return (\r\n        <Xarrow dashness={props.dotted} path={'straight'} strokeWidth={2} labels={{ middle: props.label }}\r\n                start={props.start} end={props.end} passProps={passProps} color={'gray'}/>\r\n\r\n    );\r\n}\r\n\r\nexport default Arrow;","import React from 'react';\r\n\r\nfunction Modal(props) {\r\n    return <div\r\n        className={\"absolute top-0 left-0 flex items-start justify-center z-50 w-full h-full bg-gray-500 bg-opacity-50 py-20\"}>\r\n        <div className=\"h-auto p-4 mx-2 text-left bg-white rounded shadow-xl lg:w-1/2 w-full space-y-5\">\r\n            <div className=\"flex justify-between border-b border-gray-300 pb-2\">\r\n                <h3 className=\"text-lg font-medium leading-6 text-gray-900 w-full\">\r\n                    {props.title}\r\n                </h3>\r\n                <button className=\"order-last font-medium\" onClick={e => props.setModal(props.value)}>\r\n                   X\r\n                </button>\r\n            </div>\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Modal;","import React, {useEffect, useRef, useState} from 'react';\r\nimport {Xwrapper} from 'react-xarrows';\r\nimport Box from \"../figures/Box\";\r\nimport Arrow from \"../figures/Arrow\";\r\nimport {useLocation, useHistory, Redirect} from \"react-router-dom\";\r\nimport DB from \"../firebase/FirestoreProvider\";\r\nimport Modal from \"./Modal\";\r\nimport UseAuth from \"../middlewares/UseAuth\";\r\n\r\nfunction BoardPage(props) {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const auth = UseAuth();\r\n\r\n    if (location.state === undefined) {\r\n        history.replace('/boardSoft')\r\n    }\r\n\r\n    const [board, setBoard] = useState({});\r\n    const [isOwner, setIsOwner] = useState(false);\r\n\r\n    const [boxes, setBoxes] = useState([]);\r\n    const [arrows, setArrows] = useState([]);\r\n\r\n    const [action, setAction] = useState({});\r\n    const [selected, setSelected] = useState({});\r\n    const [showOptions, setShowOptions] = useState({box: false, arrow: false});\r\n    const [modalActions, setModalActions] = useState({participants: false, delete: false});\r\n\r\n    useEffect(() => {\r\n        if(board===undefined) history.replace('/boardSoft');\r\n        else if (Object.entries(board).length !== 0)\r\n            if (!board.participantsEmail.includes(auth.user.email)) history.replace('/boardSoft');\r\n            else setIsOwner(board.ownerId === auth.user.uid);\r\n    }, [board]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (board!==undefined && Object.entries(board).length === 0) {\r\n            DB.getBoard(setBoard, location.state.boardId);\r\n            DB.initBoxes(setBoxes, location.state.boardId)\r\n            DB.initArrows(setArrows, location.state.boardId)\r\n        }\r\n    }, [board]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const boxProps = {\r\n        showOptions,\r\n        setShowOptions,\r\n        action,\r\n        setAction,\r\n        selected,\r\n        setSelected,\r\n        arrows,\r\n        setArrows,\r\n    }\r\n    const arrowProps = {\r\n        showOptions,\r\n        setShowOptions,\r\n        selected,\r\n        setSelected,\r\n        setAction\r\n    }\r\n\r\n    function nexBoxId() {\r\n        let id = 'box-0'\r\n        if (boxes.length === 0) return id;\r\n        else {\r\n            const lastBox = boxes[boxes.length - 1];\r\n            const lastNumber = Number((lastBox.id.split('-'))[1]) + 1;\r\n            return 'box-' + lastNumber;\r\n        }\r\n    }\r\n\r\n    const handleDropDynamic = (e) => {\r\n        let boxType = e.dataTransfer.getData('shape');\r\n        let {x, y} = e.target.getBoundingClientRect();\r\n        let newBox = {\r\n            id: nexBoxId(), x: e.clientX - x, y: e.clientY - y, boxType: boxType,\r\n            title: 'title', content: 'descripción', docId: 0,\r\n        };\r\n        DB.createBox(location.state.boardId, newBox);\r\n        setBoxes([...boxes, newBox]);\r\n    };\r\n\r\n    return (\r\n        <div className={'flex min-h-screen'}>\r\n            <div className={'w-48 border border-4 shadow-xl p-5 flex flex-col justify-between'}>\r\n                <div className={'space-y-5 flex flex-col justify-center items-center'}>\r\n                    <div className={'rounded text-white flex flex-col justify-center items-center'}\r\n                         onDragStart={(e) => e.dataTransfer.setData('shape', 'person')}\r\n                         draggable={'true'}>\r\n                        <div className={'rounded-full w-10 h-10 bg-blue-700'}></div>\r\n                        <div className={'rounded w-full bg-blue-700 p-5 -mt-2 text-center'}>Persona</div>\r\n                    </div>\r\n\r\n                    <div className={'rounded w-24 p-5 border-2 bg-blue-700 text-white'}\r\n                         onDragStart={(e) => e.dataTransfer.setData('shape', 'system')}\r\n                         draggable={'true'}>Sistema\r\n                    </div>\r\n\r\n                    <div className={'rounded p-5 border-2 bg-blue-500 text-white'}\r\n                         onDragStart={(e) => e.dataTransfer.setData('shape', 'container')}\r\n                         draggable={'true'}>Contenedor\r\n                    </div>\r\n                    <div className={'db text-center p-5'}\r\n                         onDragStart={(e) => e.dataTransfer.setData('shape', 'database')}\r\n                         draggable={'true'}>\r\n                        <p className={'tex-center text-white'}>Base de datos</p>\r\n                    </div>\r\n\r\n                    <div className={'rounded p-5 border-2 bg-blue-400 text-white'}\r\n                         onDragStart={(e) => e.dataTransfer.setData('shape', 'component')}\r\n                         draggable={'true'}>Componente\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={'space-y-2 flex flex-col'}>\r\n                    <button className={'w-full rounded p-1 hover:shadow-lg bg-blue-500 text-white font-medium'}\r\n                            onClick={e => setModalActions({\r\n                                participants: true,\r\n                                delete: false\r\n                            })}>{'Participantes'}</button>\r\n\r\n                    <button className={'w-full rounded p-1 hover:shadow-lg bg-blue-500 text-white font-medium'}\r\n                            onClick={e => {\r\n                                history.push('/boardSoft')\r\n                            }}>{'Salir'}</button>\r\n                    {isOwner &&\r\n                    <button className={'w-full rounded p-1 hover:shadow-lg bg-red-500 text-white font-medium'}\r\n                            onClick={e => setModalActions({\r\n                                participants: false,\r\n                                delete: true\r\n                            })}>{'Eliminar'}</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={'w-full relative overflow-auto bg-blue-50'}>\r\n                <Xwrapper>\r\n\r\n                    <div className={'w-full h-full p-2'}\r\n                         onDragOver={(e) => e.preventDefault()}\r\n                         onDrop={handleDropDynamic}>\r\n                        {boxes.map(box => {\r\n                            return <Box key={box.id} id={box.id} boxType={box.boxType} posX={box.x} posY={box.y}\r\n                                        {...boxProps} title={box.title} content={box.content} docId={box.docId}/>\r\n                        })}\r\n                        {arrows.map((arrow, index) => {\r\n                            return <Arrow key={index} id={arrow.id} start={arrow.start} end={arrow.end}\r\n                                          dotted={arrow.dotted}\r\n                                          {...arrowProps} label={arrow.label} docId={arrow.docId}/>\r\n                        })}\r\n                    </div>\r\n                </Xwrapper>\r\n            </div>\r\n\r\n            {showOptions.box && (<div className={'w-48 border border-4 shadow-xl p-2'}>\r\n                <p className={'text-md font-medium text-center uppercase'}>{selected.id}</p>\r\n                <div className={'w-full h-0.5 bg-gray-200'}/>\r\n\r\n                <div className={'space-y-2 mt-5'}>\r\n                    <div>\r\n                        <label>{'Título'}</label>\r\n                        <input className={'w-full border'} type=\"text\" value={selected.title}\r\n                               onChange={e => update(e, 'box', 'title')}/>\r\n                    </div>\r\n                    <div>\r\n                        <label>{'Descripción'}</label>\r\n                        <textarea className={'w-full border'} value={selected.content}\r\n                                  onChange={e => update(e, 'box', 'content')}/>\r\n                    </div>\r\n                </div>\r\n                <p className={'text-md font-medium text-center mt-8 uppercase'}>{'Conectores'}</p>\r\n                <div className={'w-full h-0.5 bg-gray-200'}/>\r\n\r\n\r\n                <button className={'block'} onClick={e => {\r\n                    setAction({name: 'addArrow', options: {dotted: false}})\r\n                }}>->\r\n                </button>\r\n                <button className={'block'} onClick={e => {\r\n                    setAction({name: 'addArrow', options: {dotted: true}})\r\n                }}>---->\r\n                </button>\r\n\r\n                <button className={'border-2 w-full mt-8'}\r\n                        onClick={e => DB.deleteBox(location.state.boardId, selected.docId,selected.id)}>{'Eliminar'}</button>\r\n                <button className={'border-2 w-full mt-8'} onClick={e => setShowOptions({})}>{'Cerrar'}</button>\r\n\r\n            </div>)}\r\n\r\n            {showOptions.arrow && (<div className={'w-48 border border-4 shadow-xl p-2'}>\r\n                <p className={'text-md font-medium text-center uppercase'}>{selected.id}</p>\r\n                <div className={'w-full h-0.5 bg-gray-200'}/>\r\n                <div className={'mt-5'}>\r\n                    <label>Label</label>\r\n                    <input className={'w-full border'} type=\"text\" value={selected.label}\r\n                           onChange={e => update(e, 'arrow', 'label')}/>\r\n                </div>\r\n\r\n                <div className={'mt-2'}>\r\n                    <label>Conector</label>\r\n                    <select className={'w-full'} onChange={e => update(e, 'arrow', e.target.value)}>\r\n                        <option value=\"normal\">-></option>\r\n                        <option value=\"dotted\">---></option>\r\n                    </select>\r\n                </div>\r\n\r\n                <button className={'border-2 w-full mt-8'}\r\n                        onClick={e => DB.deleteArrow(location.state.boardId, selected.docId)}>{'Eliminar'}</button>\r\n\r\n                <button className={'border-2 w-full mt-8'}\r\n                        onClick={e => setShowOptions({box: false, arrow: false})}>{'Cerrar'}</button>\r\n\r\n            </div>)}\r\n\r\n            {modalActions.delete &&\r\n            <Modal title={'Crear Tablero'} setModal={setModalActions} value={{participants: false, delete: false}}>\r\n                <div className={'p-5 space-y-10'}>\r\n                    <p>{'¿Estas seguro de eliminar este tablero?'}</p>\r\n                    <div className={'flex justify-end space-x-2'}>\r\n                        <button className={'rounded p-2 hover:shadow-lg bg-gray-300 text-black font-medium'}\r\n                                onClick={e => setModalActions({participants: false, delete: false})}>{'Cerrar'}</button>\r\n\r\n                        <button className={'rounded p-2 hover:shadow-lg bg-red-500 text-white font-medium'}\r\n                                onClick={e => {\r\n                                    DB.deleteBoard(location.state.boardId).then(() => {\r\n                                        history.replace('/boardSoft')\r\n                                    })\r\n                                }}>{'Eliminar'}</button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={'flex justify-center'}>\r\n                </div>\r\n            </Modal>}\r\n\r\n            {modalActions.participants &&\r\n            <Modal title={'Participantes'} setModal={setModalActions} value={{participants: false, delete: false}}>\r\n                <div className={'p-5 space-y-10'}>\r\n                    {isOwner && <form className={'flex space-x-2'}\r\n                                      onSubmit={e => {\r\n                                          e.preventDefault();\r\n                                          DB.addParticipant(e.target.email.value, location.state.boardId)\r\n                                      }}>\r\n                        <input className={'w-full'} type=\"text\" name={'email'} placeholder={'Correo del participante'}/>\r\n                        <button\r\n                            className={'rounded p-2 hover:shadow-lg bg-blue-500 text-white font-medium'}>{'Añadir'}</button>\r\n                    </form>}\r\n                    <div className={'space-y-2'}>\r\n                        {board.participantsEmail.map((email, index) => {\r\n                            return <div key={index} className={'flex space-x-2 items-center justify-center'}>\r\n                                <p className={'w-full block border-2 p-1.5 rounded text-gray-600 font-medium'}>{email}</p>\r\n                                {isOwner &&\r\n                                <button className={'rounded p-2 hover:shadow-lg bg-red-500 text-white font-medium'}\r\n                                        onClick={e => DB.removeParticipant(email, location.state.boardId)}>{'Remover'}</button>}\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </Modal>}\r\n        </div>\r\n    );\r\n\r\n    function update(e, type, toUpdate) {\r\n        if (type === 'box') {\r\n            let updated = [...boxes];\r\n            const position = updated.findIndex((element) => selected.id === element.id);\r\n            const value = toUpdate === 'title' ? {title: e.target.value} : {content: e.target.value};\r\n            updated.splice(position, 1, {...updated[position], ...value});\r\n            setSelected({...selected, ...value});\r\n            //DB.updateBox(location.state.boardId, selected)\r\n            DB.updateBox(location.state.boardId, updated[position])\r\n            setBoxes(updated);\r\n\r\n        } else {\r\n            let updated = [...arrows];\r\n            const position = updated.findIndex((element) => selected.id === element.id);\r\n\r\n            let value;\r\n            switch (toUpdate) {\r\n                case 'dotted':\r\n                    value = {dotted: true}\r\n                    break;\r\n                case 'normal':\r\n                    value = {dotted: false}\r\n                    break;\r\n                case 'label':\r\n                    value = {label: e.target.value}\r\n                    break;\r\n                default:\r\n                    //value = {dotted: false};\r\n                    break;\r\n            }\r\n            updated.splice(position, 1, {...updated[position], ...value});\r\n            setSelected({...selected, ...value});\r\n            DB.updateArrow(location.state.boardId, updated[position])\r\n            setArrows(updated);\r\n        }\r\n    }\r\n}\r\n\r\nexport default BoardPage;","import React, {useEffect, useState} from 'react';\r\nimport DB from \"../firebase/FirestoreProvider\";\r\nimport UseAuth from \"../middlewares/UseAuth\";\r\nimport Modal from \"./Modal\";\r\nimport authProvider from \"../firebase/AuthProvider\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nfunction DashboardPage(props) {\r\n\r\n    const auth = UseAuth();\r\n    const [boards, setBoards] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    useEffect(() => {\r\n        if(auth.user) DB.initBoards(setBoards,auth.user.email);\r\n    }, [auth.user]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={'bg-blue-50 min-h-screen'}>\r\n            <header>\r\n                <div className={'h-16 bg-white shadow-lg flex justify-between items-center px-5'}>\r\n                    <h1 className={'text-xl font-medium'}>{'Tableros'}</h1>\r\n                    <button className={'order-last border rounded p-2 hover:shadow-lg'}\r\n                    onClick={e=>{authProvider.logout(auth.setUser)}}>{'Cerrar sesión'}</button>\r\n                </div>\r\n            </header>\r\n            <div className={'flex flex-col justify-center m-10 space-y-10'}>\r\n\r\n                <div className={'flex justify-center'}>\r\n                    <button className={'rounded p-2 hover:shadow-lg bg-blue-500 text-white font-medium'}\r\n                            onClick={e => setModal(true)}>{'Crear nuevo'}</button>\r\n                </div>\r\n                <div className={'grid grid-cols-5 gap-4'}>\r\n                    {\r\n                        boards.map((board, index) => {\r\n                            return  <Link  key={index} to={{pathname:`/boardSoft/board/${board.name}`,state:{boardId:board.id}}} onClick={e =>DB.stop()}>\r\n                             <div className={'bg-white h-48 flex justify-center items-center shadow-lg rounded hover:bg-gray-200'}>\r\n                                 <h2 className={'text-xl order-none capitalize font-medium pt-5'}>{board.name}</h2>\r\n                             </div>\r\n                            </Link>\r\n                        })\r\n                    }\r\n\r\n\r\n                </div>\r\n            </div>\r\n            {modal && <Modal title={'Crear Tablero'} setModal={setModal} value={false}>\r\n                <form className={'w-full p-5 flex flex-col justify-center space-y-2'}\r\n                      onSubmit={e => {e.preventDefault();DB.createBoards(e.target.name.value, auth.user);setModal(false)}}>\r\n                    <div>\r\n                    <label>Nombre</label>\r\n                    <input className={'w-full'} type=\"text\" id={'name'}/>\r\n                    </div>\r\n                    <div className={'flex justify-center'}>\r\n                    <button className={'rounded p-2 hover:shadow-lg bg-blue-500 text-white font-medium'}>{'Crear'}</button>\r\n                    </div>\r\n                </form>\r\n            </Modal>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DashboardPage;","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport HomePage from \"../pages/HomePage\";\r\nimport PrivateRouter from \"./PrivateRouter\";\r\nimport BoardPage from \"../pages/BoardPage\";\r\nimport UseAuth from \"../middlewares/UseAuth\";\r\nimport DashboardPage from \"../pages/DashboardPage\";\r\n\r\n\r\nfunction AppRouter(props) {\r\n    const auth = UseAuth();\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path={'/boardSoft'} component={auth.isLogged()?DashboardPage:HomePage}/>\r\n                <Route path={'/boardSoft/test'}>\r\n                    <h1>test</h1>\r\n                </Route>\r\n\r\n                <PrivateRouter path={'/boardSoft/board/:name'} component={BoardPage}/>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default AppRouter;","import AppRouter from \"./routers/AppRouter\";\nimport AuthProvider from \"./middlewares/AuthProvider\";\nimport FirestoreProvider from \"./firebase/FirestoreProvider\";\n\nfunction App() {\n    return (\n        <AuthProvider>\n                <AppRouter/>\n        </AuthProvider>\n\n\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}